name: Rust

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  RUSTFLAGS: -A warnings

jobs:
  test:
    name: Test on ${{ matrix.os }} using Rust ${{ matrix.rust }} with bindgen features '${{ matrix.cargo_features }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, nightly]
        cargo_features: ['']

    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
        targets: ${{ matrix.target }}
        components: 'rustfmt, clippy'

    - uses: actions/checkout@v2

    - name: Install LLVM
      if: matrix.os == 'windows-latest'
      run: choco upgrade llvm -y

    - name: Set clang path
      if: matrix.os =='windows-latest'
      run: echo "LIBCLANG_PATH=C:\Program Files\LLVM\bin" >> $GITHUB_ENV
      shell: bash

    - name: Cargo fmt
      run: cargo +${{ matrix.rust }} fmt --all -- --check
      if: matrix.os == 'ubuntu-latest' && matrix.rust == 'nightly'

    - name: Cargo clippy
      run: cargo +${{ matrix.rust }} clippy --all-targets --workspace --features "${{ matrix.cargo_features }}"
      if: matrix.os == 'ubuntu-latest' && matrix.rust == 'nightly' && matrix.cargo_features != ''

    - name: Cargo clippy
      run: cargo +${{ matrix.rust }} clippy --all-targets --workspace
      if: matrix.os == 'ubuntu-latest' && matrix.rust == 'nightly' && matrix.cargo_features == ''

    - name: Build
      run: cargo +${{ matrix.rust }} build --features "${{ matrix.cargo_features }}"
      if: matrix.cargo_features != ''

    - name: Build
      run: cargo +${{ matrix.rust }} build
      if: matrix.cargo_features == ''

    - name: Test
      run: cargo +${{ matrix.rust }} test --features "${{ matrix.cargo_features }}"
      if: matrix.cargo_features != ''

    - name: Test
      run: cargo +${{ matrix.rust }} test
      if: matrix.cargo_features == ''

    - name: Benchmark
      if: matrix.rust == 'nightly'
      run: cargo +${{ matrix.rust }} bench
